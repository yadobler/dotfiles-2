
environment {
    ELECTRON_OZONE_PLATFORM_HINT "auto"
    GTK_THEME "WhiteSur-Dark-solid"
    im_platform "fcitx"
    GTK_IM_MODULE "fcitx"
    QT_IM_MODULE "fcitx"
    SDL_IM_MODULE "fcitx"
    XMODIFIERS "'@im=fcitx'"
    MOZ_ENABLE_WAYLAND "1"
    NIXOS_OZONE_WL "1"
    GTK_USE_PORTAL "1"
    NIXOS_XDG_OPEN_USE_PORTAL "1"
    RANGER_LOAD_DEFAULT_RC "FALSE"
    WLR_NO_HARDWARE_CURSORS "1"
    WLR_RENDERER_ALLOW_SOFTWARE "1"
    _JAVA_AWT_WM_NONREPARENTING "1"
}

// Input device configuration.
input {
    keyboard {
        xkb {
            layout "us"
            options "ctrl:nocaps,caps:escape"
        }
    }

    touchpad {
        dwt
        tap
        natural-scroll
        middle-emulation
    }

    touch {
        map-to-output "eDP-1"
    }
    

    // Focus windows and outputs automatically when moving the mouse into them.
    // Setting max-scroll-amount="0%" makes it work only on windows already fully on screen.
    focus-follows-mouse max-scroll-amount="90%"
    warp-mouse-to-focus 
}

cursor {
    xcursor-theme "Banana"
    xcursor-size 30
}


// Run `niri msg outputs` while inside a niri instance to list all outputs and their modes.
output "eDP-1" {
    mode "3000x2000@60"
    scale 2
    transform "normal"
    position x=0 y=0
}

output "DP-3" {
    scale 1
    transform "normal"
    position x=0 y=-1080
}

workspace "chat" {
    open-on-output "eDP-1" // always open on laptop 
}

window-rule {
    match at-startup=true app-id=r#"^brave-web\.whatsapp\.com__-"#
    match at-startup=true app-id=r#"^org\.telegram\.desktop"#
    open-on-workspace "chat"
}

window-rule {
    geometry-corner-radius 5
    clip-to-geometry true
}

// Settings that influence how windows are positioned and sized.
layout {
    gaps 8
    center-focused-column "never"
    background-color "transparent"

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        proportion 1.0
    }

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    preset-window-heights { 
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        proportion 1.0
    }

    default-column-width { 
        proportion 0.5; 
    }

    focus-ring {
        width 2
        active-color "#ee5496"
    }

    border {
        off
    }

    insert-hint {
        color "#08bdba60"
    }

    tab-indicator {
        active-color "#08bdba"
        inactive-color "#000000A0"
        width 10
        gap 10
        corner-radius 10
        length total-proportion=0.5
        position "left"
        place-within-column
        hide-when-single-tab
    }


}

animations {
    workspace-switch {
        spring damping-ratio=0.6 stiffness=100 epsilon=0.0001
    }
    window-close {
        duration-ms 750
        curve "linear"
        // https://gitlab.com/sharkler/sharkler-dots/-/blob/main/.config/niri/config.kdl
        custom-shader r"
        vec4 fall_and_rotate(vec3 coords_geo, vec3 size_geo) {
            float progress = niri_clamped_progress * niri_clamped_progress;
            vec2 coords = (coords_geo.xy - vec2(0.5, 1.0)) * size_geo.xy;
            coords.x += progress * 3000.0;
            float random = (niri_random_seed - 0.5) / 1.0;
            random = sign(random) - random;
            float max_angle = 2.0 * random;
            float angle = progress * max_angle;
            mat2 rotate = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));
            coords = rotate * coords;
            coords_geo = vec3(coords / size_geo.xy + vec2(0.5, 1.0), 1.0);
            vec3 coords_tex = niri_geo_to_tex * coords_geo;
            vec4 color = texture2D(niri_tex, coords_tex.st);
            return color;
        }

        vec4 close_color(vec3 coords_geo, vec3 size_geo) {
            return fall_and_rotate(coords_geo, size_geo);
        }
        "
    }
}

// Add lines like this to spawn processes at startup.
// Note that running niri as a session supports xdg-desktop-autostart,
// which may be more convenient to use.
// See the binds section below for more spawn examples.

spawn-at-startup "hyprlock"
spawn-at-startup "hypridle"
spawn-at-startup "niriswitcher"
spawn-at-startup "iio-sensor-proxy"
spawn-at-startup "lxqt-policykit-agent"
spawn-at-startup "wl-paste" "--watch" "cliphist" "store"
spawn-at-startup "light" "-N" "5"
spawn-at-startup "pulseaudio -D"
spawn-at-startup "blueman-applet"
spawn-at-startup "rfkill" "block" "bluetooth"
spawn-at-startup "~/.config/scripts/start_ime.sh"
spawn-at-startup "pw-play" "/home/yukna/.config/scripts/assets/oxp.wav"
spawn-at-startup "Telegram"
spawn-at-startup "gio" "launch" "/home/yukna/.local/share/applications/whatsapp.desktop"
spawn-at-startup "swaybg" "-i" "/home/yukna/Pictures/wallpaper.jpg" "-m" "fill"

hotkey-overlay {
    skip-at-startup
}

// Put swaybg inside the overview backdrop.
layer-rule {
    match namespace="^wallpaper$"
    place-within-backdrop true
}

overview {
    zoom 0.7
    workspace-shadow {
        off
    }
}

// Uncomment this line to ask the clients to omit their client-side decorations if possible.
// If the client will specifically ask for CSD, the request will be honored.
// Additionally, clients will be informed that they are tiled, removing some client-side rounded corners.
// This option will also fix border/focus ring drawing behind some semitransparent windows.
// After enabling or disabling this, you need to restart the apps for this to take effect.
prefer-no-csd

// You can change the path where screenshots are saved.
// A ~ at the front will be expanded to the home directory.
// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"


binds {
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }
    
    Mod+Q { close-window; }
    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Ctrl+Alt+Delete allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Alt+P { power-off-monitors; }
    Mod+Alt+L hotkey-overlay-title="Lock Screen" { spawn "hyprlock"; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+Return hotkey-overlay-title="Launch Terminal" { spawn "foot"; }
    Mod+B      hotkey-overlay-title="Launch Browser" { spawn "brave" "--gtk-version=4" "--enable-features=UseOzonePlatform" "--ozone-platform=wayland" "--enable-wayland-ime" "--enable-features=WaylandWindowDecorations";}
    Mod+E      hotkey-overlay-title="Launch Files" { spawn "nautilus"; }
    Mod+V      hotkey-overlay-title="Launch Clipboard" { spawn "~/.config/scripts/paste_menu.sh"; }
    Mod+Escape hotkey-overlay-title="Launch Power Menu" { spawn "~/.config/scripts/powermenu_launcher.sh"; }
    Alt+Space  hotkey-overlay-title="Launcher" { spawn "~/.config/scripts/app_launcher.sh"; }

    // You can also use a shell. Do this if you need pipes, multiple commands, etc.
    // Note: the entire command goes as a single argument in the end.
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }

    // Example volume keys mappings for PipeWire & WirePlumber.
    // The allow-when-locked=true property makes them work even when the session is locked.
    XF86MonBrightnessUp   allow-when-locked=true { spawn "light" "-A" "5"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "light" "-U" "5"; }
    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "--limit" "1" "@DEFAULT_AUDIO_SINK@" "5%+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "5%-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
    XF86AudioPrev        allow-when-locked=true { spawn "playerctl" "previous"; }
    XF86AudioNext        allow-when-locked=true { spawn "playerctl" "next"; }
    XF86AudioPlay        allow-when-locked=true { spawn "playerctl" "play-pause"; }


    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+L     { focus-column-right; }
    Mod+Shift+H     { move-column-left; }
    Mod+Shift+J     { move-window-down-or-to-workspace-down; }
    Mod+Shift+K     { move-window-up-or-to-workspace-up; }
    Mod+Shift+L     { move-column-right; }
    Mod+Ctrl+H     { focus-monitor-left; }
    Mod+Ctrl+J     { focus-monitor-down; }
    Mod+Ctrl+K     { focus-monitor-up; }
    Mod+Ctrl+L     { focus-monitor-right; }
    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Shift+Home { move-column-to-first; }
    Mod+Shift+End  { move-column-to-last; }

    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Shift+U         { move-column-to-workspace-down; }
    Mod+Shift+I         { move-column-to-workspace-up; }
    Mod+Ctrl+U         { move-workspace-down; }
    Mod+Ctrl+I         { move-workspace-up; }


    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }
    Mod+Shift+WheelScrollDown cooldown-ms=150 { move-column-right; }
    Mod+Shift+WheelScrollUp   cooldown-ms=150 { move-column-left; }
    Mod+MouseMiddle           cooldown-ms=150 { close-window; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    // Switches focus between the current and the previous workspace.
    Mod+Tab { focus-workspace-previous; }
    Alt+Tab repeat=false { spawn "gdbus" "call" "--session" "--dest" "io.github.isaksamsten.Niriswitcher" "--object-path" "/io/github/isaksamsten/Niriswitcher" "--method" "io.github.isaksamsten.Niriswitcher.application" ; }
    Alt+Shift+Tab repeat=false { spawn "gdbus" "call" "--session" "--dest" "io.github.isaksamsten.Niriswitcher" "--object-path" "/io/github/isaksamsten/Niriswitcher" "--method" "io.github.isaksamsten.Niriswitcher.application" ; }
    Alt+Grave repeat=false { spawn "gdbus" "call" "--session" "--dest" "io.github.isaksamsten.Niriswitcher" "--object-path" "/io/github/isaksamsten/Niriswitcher" "--method" "io.github.isaksamsten.Niriswitcher.workspace" ; }
    Alt+Shift+Grave repeat=false { spawn "gdbus" "call" "--session" "--dest" "io.github.isaksamsten.Niriswitcher" "--object-path" "/io/github/isaksamsten/Niriswitcher" "--method" "io.github.isaksamsten.Niriswitcher.workspace" ; }
    
    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    Mod+T { toggle-column-tabbed-display; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }

    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+Space       { toggle-window-floating; }
    Mod+Shift+Space { switch-focus-between-floating-and-tiling; }

}

switch-events {
    tablet-mode-on { spawn "bash" "-c" "gsettings set org.gnome.desktop.a11y.applications screen-keyboard-enabled true"; }
    tablet-mode-off { spawn "bash" "-c" "gsettings set org.gnome.desktop.a11y.applications screen-keyboard-enabled false"; }
}

